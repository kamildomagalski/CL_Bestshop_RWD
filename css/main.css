/* http://meyerweb.com/eric/tools/css/reset/
   v2.0-modified | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* make sure to set some focus styles for accessibility */
:focus {
  outline: 0;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
}

input[type=search] {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: content-box;
}

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical;
}

/**
 * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none;
}

/**
 * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */
}

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0;
}

/**
 * Correct margin displayed oddly in IE 6/7.
 */
form {
  margin: 0;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */
}

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */
}

/**
 * Address Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type=checkbox],
input[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 6/7/8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

html,
button,
input,
select,
textarea {
  color: #222;
}

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

img {
  vertical-align: middle;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

textarea {
  resize: vertical;
}

.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

:root {
  font-size: 10px;
}

.btn {
  font-family: "Open Sans" sans-serif;
  font-size: 16px;
  font-weight: 700;
  line-height: 22px;
  color: #fff;
  border-radius: 40px;
  text-decoration: none;
}

.opening-btn {
  background-color: #08A6E4;
  box-shadow: 5px 10px 14px #07ACE629;
  padding: 22px 92px;
  text-align: center;
}
@media screen and (min-width: 650px) {
  .opening-btn {
    padding: 22px 157px;
  }
}

.container {
  box-sizing: border-box;
  max-width: 1200px;
  width: 100%;
  margin: 0 auto;
  padding: 0 40px;
}

.header {
  box-shadow: 0 3px 6px #00000029;
}

.header .container {
  display: flex;
}

.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 70px;
}

.logo {
  font-family: "Raleway", sans-serif;
  font-size: 32px;
  line-height: 37px;
  font-weight: 300;
  color: #08A6E4;
  text-decoration: none;
}

.nav {
  display: none;
}
.nav .nav-list {
  display: flex;
}
.nav .nav-list li {
  display: flex;
  justify-content: center;
  margin-left: 25px;
}
@media screen and (min-width: 1000px) {
  .nav .nav-list li {
    padding-left: 75px;
  }
}
.nav .nav-list a {
  display: inline-block;
  font-family: "Open Sans", sans-serif;
  font-size: 11px;
  line-height: 15px;
  font-weight: 700;
  color: #A5A5A5;
  text-decoration: none;
  padding: 28px 10px 24px;
  box-sizing: border-box;
  border-bottom: 3px solid transparent;
}
.nav .nav-list a:hover {
  color: #000;
  border-bottom: 3px solid #08A6E4;
}
@media screen and (min-width: 650px) {
  .nav {
    display: flex;
  }
}

.burger-menu div {
  width: 20px;
  height: 2px;
  background: #08A6E4;
}
.burger-menu div:nth-child(2) {
  margin: 4px 0;
}
@media screen and (min-width: 650px) {
  .burger-menu {
    display: none;
  }
}
.burger-menu:active div {
  width: 25px;
  height: 3px;
  background: #08a6e4;
}

.opening {
  background-image: url(../../assets/Background.png);
  background-position: bottom;
  background-repeat: no-repeat;
  background-size: auto 50%;
  height: calc(100vh - 70px);
}

.opening .container {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.opening .container h1 {
  font-family: "Raleway", sans-serif;
  font-size: 49px;
  font-weight: 400;
  line-height: 57px;
  padding-top: 130px;
}
.opening .container p {
  font-family: "Open Sans", sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 22px;
  padding: 20px 0 38px;
  text-align: center;
}

.stats .container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-bottom: 50px;
}
.stats .container h2 {
  font-size: 36px;
  line-height: 42px;
  font-weight: 400;
  margin: 50px 0 25px;
  text-align: center;
}
@media screen and (min-width: 650px) {
  .stats .container h2 {
    margin: 100px 0;
  }
}

.stats-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}
@media screen and (min-width: 650px) {
  .stats-container {
    flex-direction: row;
    justify-content: space-between;
  }
}

.stats-col {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  width: 170px;
  margin-bottom: 25px;
  position: relative;
}
@media screen and (min-width: 650px) {
  .stats-col {
    margin-bottom: 121px;
  }
}
.stats-col .bg-circle {
  width: 63px;
  height: 63px;
  border-radius: 50%;
}
.stats-col:nth-child(1) .bg-circle {
  background: #FB3B64;
}
.stats-col:nth-child(1) img {
  position: absolute;
  right: 42px;
  top: 3px;
}
.stats-col:nth-child(2) .bg-circle {
  background: #08A6E4;
}
.stats-col:nth-child(2) img {
  position: absolute;
  right: 30px;
  top: 14px;
}
.stats-col:nth-child(3) .bg-circle {
  background: #55DFB4;
}
.stats-col:nth-child(3) img {
  position: absolute;
  right: 30px;
  top: 6px;
}
.stats-col p:nth-child(3) {
  font-size: 20px;
  line-height: 24px;
  font-weight: 800;
  padding: 14px 0 19px;
}
@media screen and (min-width: 650px) {
  .stats-col p:nth-child(3) {
    padding: 22px 0 19px;
  }
}
.stats-col p:nth-child(4) {
  font-size: 17px;
  line-height: 20px;
  font-weight: 400;
  color: #A5A5A5;
  text-align: center;
}

.benefits {
  background-color: #F7F7F7;
  padding-top: 42px;
}
.benefits .container {
  display: flex;
  flex-wrap: wrap;
}
@media screen and (min-width: 650px) {
  .benefits .container {
    width: 1124px;
  }
}
@media screen and (min-width: 650px) {
  .benefits {
    padding-top: 105px;
  }
}

.article-row {
  display: flex;
  flex-direction: column-reverse;
  min-width: 100%;
  border: 1px solid #E8E9ED;
  border-radius: 5px;
  background: #FFFFFF;
  position: relative;
  margin: 21px 0;
}
@media screen and (min-width: 650px) {
  .article-row {
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    padding: 0 21px 0;
  }
}

.article {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  margin: 26px 0 0;
  max-width: 315px;
  position: relative;
  /* width: 50%; */
}
@media screen and (min-width: 650px) {
  .article {
    align-items: flex-start;
    margin: 91px 0 91px 35px;
    max-width: none;
  }
}

.article-text {
  margin: 0 21px 25px;
}
.article-text h3 {
  font-family: "Raleway", sans-serif;
  font-size: 3rem;
  line-height: 3.5rem;
  font-weight: 400;
}
@media screen and (min-width: 650px) {
  .article-text h3 {
    font-size: 3.6rem;
    line-height: 4.2rem;
  }
}
.article-text p {
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  font-size: 1.4rem;
  line-height: 1.9rem;
  height: 84px;
  flex-grow: 1;
  padding-top: 47px;
  overflow: hidden;
}
@media screen and (min-width: 650px) {
  .article-text p {
    font-size: 1.6rem;
    line-height: 2.2rem;
    width: 416px;
    height: 72px;
    padding: 30px 0 50px;
  }
}

.article-text::after {
  display: none;
}
@media screen and (min-width: 650px) {
  .article-text::after {
    content: "";
    display: block;
    width: 327px;
    height: 1px;
    border-bottom: 4px solid #FB3B64;
  }
}

.img-box1 {
  display: flex;
  justify-content: center;
  margin: 37px 45px 20px 35px;
}
@media screen and (min-width: 650px) {
  .img-box1 {
    margin: 113px 97px 8px 0;
  }
}

.img-box-square img {
  position: relative;
  z-index: 2;
  width: 192px;
  height: auto;
}
@media screen and (min-width: 650px) {
  .img-box-square img {
    width: 386px;
  }
}

.img-box-square {
  position: relative;
}
.img-box-square::before {
  content: "";
  display: block;
  width: 90px;
  height: 90px;
  background: #FB3B64;
  border-radius: 40px;
  position: absolute;
  right: 0px;
  top: -18px;
  transform: rotate(45deg);
}
@media screen and (min-width: 650px) {
  .img-box-square::before {
    width: 170px;
    height: 180px;
    right: 0px;
    top: -32px;
  }
}

@media screen and (min-width: 650px) {
  .article-row2 {
    flex-direction: row-reverse;
  }
}

.article-row2 .article-text::after {
  display: none;
}
@media screen and (min-width: 650px) {
  .article-row2 .article-text::after {
    content: "";
    display: block;
    width: 327px;
    height: 1px;
    border-bottom: 4px solid #08A6E4;
  }
}

.img-box2 {
  display: flex;
  justify-content: center;
  margin: 19px 30px 20px 70px;
}
@media screen and (min-width: 650px) {
  .img-box2 {
    margin: 29px 0 13px 50px;
  }
}

.img-box-circle {
  position: relative;
}
.img-box-circle::before {
  content: "";
  display: block;
  width: 130px;
  height: 130px;
  background: #08A6E4;
  border-radius: 50%;
  position: absolute;
  left: 0px;
  top: 0px;
}
@media screen and (min-width: 650px) {
  .img-box-circle::before {
    width: 320px;
    height: 320px;
    top: -10px;
  }
}

.img-box-circle img {
  position: relative;
  z-index: 2;
  width: 175px;
  height: auto;
}
@media screen and (min-width: 650px) {
  .img-box-circle img {
    width: 426px;
  }
}

.article-row3 {
  padding: 0;
  margin-bottom: 0px;
  box-sizing: border-box;
}
.article-row3 .article {
  max-width: 100%;
  margin: 26px 0 0;
}
.article-row3 .article-text {
  margin: 0 21px 30px;
  max-width: 315px;
  margin: 26px 21px 20px;
}
@media screen and (min-width: 650px) {
  .article-row3 {
    width: 623px;
    height: 370px;
    margin: 0 61px 105px 0;
  }
  .article-row3 .article {
    width: 623px;
    margin: 69px 34px 71px 35px;
  }
}

.img-box-bg {
  background: #55DFB4;
  border-radius: 5px;
  width: 100%;
  margin-top: -5px;
  z-index: 2;
}
.img-box3 {
  width: 295px;
  height: 207px;
  margin: 0 auto;
}
.img-box3 img {
  width: 100%;
  height: auto;
  height: auto;
  position: relative;
  top: 25px;
  right: 20px;
}

.pricing .container {
  padding: 50px 18px 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.pricing-title {
  font-family: "Raleway", sans-serif;
  font-size: 3.6rem;
  line-height: 4.2rem;
  margin-bottom: 14px;
  font-weight: 400;
}

.pricing-section {
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media screen and (min-width: 800px) {
  .pricing-section {
    flex-direction: row;
    justify-content: center;
  }
  .pricing-section .professional-box {
    margin: 50px 58px;
  }
  .pricing-section .pricing-card {
    flex-direction: column;
    justify-content: center;
  }
  .pricing-section .price {
    margin: 34px auto;
  }
  .pricing-section .basic-list {
    margin: 61px auto 33px;
    text-align: center;
  }
  .pricing-section .professional-list {
    margin: 69px auto 30px;
    text-align: center;
  }
  .pricing-section .premium-list {
    margin: 50px auto 30px;
    text-align: center;
  }
}

.pricing-box {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  border-radius: 18px;
}

.basic-box {
  border: 1px solid #FB3B64;
  min-width: 293px;
}
@media screen and (min-width: 600px) {
  .basic-box {
    min-width: 400px;
  }
}
@media screen and (min-width: 800px) {
  .basic-box {
    min-width: 190px;
  }
}
@media screen and (min-width: 1300px) {
  .basic-box {
    min-width: 372px;
  }
}

.pricing-card {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.price {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.price h4 {
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
  font-size: 2rem;
  line-height: 2.4rem;
}
.price p {
  font-size: 4.6rem;
  line-height: 6.4rem;
  font-family: "Open Sans", sans-serif;
  font-weight: 300;
}

.price-basic {
  margin: 70px 0 0 45px;
}
.price-basic p {
  color: #FB3B64;
}

.pricing-list {
  margin: 25px 11px 0 0;
}
.pricing-list li {
  font-family: "Open Sans", sans-serif;
  font-size: 1.4rem;
  line-height: 4.1rem;
  font-weight: 400;
}
.pricing-list li::before {
  content: url(/assets/Ckechmark-1.svg);
  margin-right: 13px;
}

.basic-list li:nth-of-type(n+4)::before {
  content: url(/assets/Close.svg);
}

.pricing-btn {
  font-family: "Open Sans", sans-serif;
  font-size: 1.3rem;
  line-height: 1.8rem;
  font-weight: 700;
  color: #FFFFFF;
  padding: 16px 57px;
  border-radius: 23px;
  text-decoration: none;
  position: relative;
  transform: translateY(50%);
}

.redish-btn {
  background: #FB3B64;
}

.professional-box {
  border: 1px solid #08A6E4;
  margin: 54px auto;
  min-width: 339px;
  box-shadow: 5px 10px 27px #07ACE629;
}
@media screen and (min-width: 600px) and (max-width: 799px) {
  .professional-box {
    min-width: 444px;
  }
}
@media screen and (min-width: 800px) {
  .professional-box {
    min-width: 234px;
  }
}
@media screen and (min-width: 1300px) {
  .professional-box {
    min-width: 405px;
  }
}

.price-offer {
  font-family: "Raleway", sans-serif;
  font-size: 1.2rem;
  line-height: 1.4rem;
  font-weight: 700;
  color: #000000;
}

.price-professional {
  margin: 91px 0 0 28px;
}
.price-professional p {
  color: #08A6E4;
}
.price-professional .price-offer {
  font-family: "Raleway", sans-serif;
  font-size: 1.2rem;
  line-height: 1.4rem;
  font-weight: 700;
  color: #000000;
}

.professional-list {
  margin: 51px 41px 0 0;
}
.professional-list li:last-of-type::before {
  content: url(/assets/Close.svg);
}

.blue-btn {
  background: #08A6E4;
}

.premium-box {
  border: 1px solid #55DFB4;
  min-width: 293px;
}
@media screen and (min-width: 600px) {
  .premium-box {
    min-width: 400px;
  }
}
@media screen and (min-width: 800px) {
  .premium-box {
    min-width: 190px;
  }
}
@media screen and (min-width: 1300px) {
  .premium-box {
    min-width: 372px;
  }
}

.price-premium {
  margin: 70px 0 0 31px;
}
.price-premium p {
  color: #55DFB4;
}
.price-premium .price-offer {
  font-family: "Raleway", sans-serif;
  font-size: 1.2rem;
  line-height: 1.4rem;
  font-weight: 700;
  color: #000000;
}

.green-btn {
  background: #55DFB4;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
